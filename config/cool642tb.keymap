#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define JP_KANA LANGUAGE_1 /* かな */
#define JP_EISU LANGUAGE_2 /* 英数 */
#define MOUSEDETAIL 3
#define MOUSE 4
#define SCROLL 5
#define NUM 6
#define ZMK_POINTING_DEFAULT_SCRL_VAL 80

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
    tapping-term-ms = <300>;
};

/* &mkp_input_listener { input-processors = <&zip_temp_layer MOUSEDETAIL 100000>; }; */

/ {
    combos {
        compatible = "zmk,combos";

        comb1 {
            bindings = <&kp TAB>;
            key-positions = <10 0>;
        };

        comb2 {
            bindings = <&kp LS(ESCAPE)>;
            key-positions = <0 1>;
        };

        comb3 {
            bindings = <&kp CAPSLOCK>;
            key-positions = <11 10>;
        };

        comb4 {
            bindings = <&kp BACKSPACE>;
            key-positions = <9 8>;
            slow-release;
        };

        comb5 {
            bindings = <&bt BT_CLR_ALL>;
            key-positions = <9 8>;
            timeout-ms = <0>;
            layers = <2>;
        };

        comb6_middleclick {
            bindings = <&mkp MCLK>;
            key-positions = <31 32>;
        };

        comb7minus {
            bindings = <&kp MINUS>;
            key-positions = <7 8>;
        };

        comb8 {
            bindings = <&kp BACKSPACE>;
            key-positions = <20 21>;
        };

        MOUSEDETAIL {
            bindings = <&tog 3>;
            key-positions = <18 41>;
        };

        cmd_+ {
            bindings = <&kp PLUS>;
            key-positions = <7 8 9>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        ret_kp: ret_kp {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&to 0 &macro_param_1to1>,
                <&macro_press>,
                <&kp MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_param_1to1>,
                <&macro_release>,
                <&kp MACRO_PLACEHOLDER>;

            label = "RET_KP";
        };

        atmark: atmark {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp JP_EISU &kp AT_SIGN>;
            label = "ATMARK";
        };

        JpBracket: JpBracket {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp JP_KANA &kp LEFT_BRACKET &kp RIGHT_BRACKET &kp ENTER &kp LEFT_ARROW>;
            label = "JPBRACKET";
        };

        ret_mkp: ret_mkp {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&to 0 &macro_param_1to1>,
                <&macro_press>,
                <&mkp MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_param_1to1>,
                <&macro_release>,
                <&mkp MACRO_PLACEHOLDER>;

            label = "RET_MKP";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        encoder_msc_down_up: encoder_msc_down_up {
            compatible = "zmk,behavior-sensor-rotate";
            label = "ENCODER_MSC_DOWN_UP";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            // スクロール方向を逆にしたい場合は <&msc SCRL_DOWN> と <&msc SCRL_UP> を入れ替えてください

            tap-ms = <20>;
        };

        cmd_to_cmd: cmd_to_cmd {
            compatible = "zmk,behavior-tap-dance";
            label = "CMD_TO_CMD";
            #binding-cells = <0>;
            bindings = <&kp LEFT_COMMAND>, <&kp RIGHT_COMMAND>;

            tapping-term-ms = <200>;
        };

        play_pause_n_p: play_pause_n_p {
            compatible = "zmk,behavior-tap-dance";
            label = "PLAY_PAUSE_N_P";
            #binding-cells = <0>;
            bindings = <&kp C_PLAY_PAUSE>, <&kp C_NEXT>, <&kp C_PREVIOUS>;
        };

        KUDOKUTEN: KUDOKUTEN {
            compatible = "zmk,behavior-tap-dance";
            label = "KUDOKUTEN";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp PERIOD>;
        };

        VOL_UP_DOWN: VOL_UP_DOWN {
            compatible = "zmk,behavior-tap-dance";
            label = "VOL_UP_DOWN";
            #binding-cells = <0>;
            bindings = <&kp C_VOLUME_DOWN>, <&kp C_VOLUME_UP>;
        };

        BIKKURI_HATENA: BIKKURI_HATENA {
            compatible = "zmk,behavior-tap-dance";
            label = "BIKKURI_HATENA";
            #binding-cells = <0>;
            bindings = <&kp EXCLAMATION>, <&kp QUESTION>;
        };

        NUM1_SYMBOLLL2: NUM1_SYMBOLLL2 {
            compatible = "zmk,behavior-tap-dance";
            label = "NUM1_SYMBOLLL2";
            #binding-cells = <0>;
            bindings = <&mo 2>, <&mo 1>;

            tapping-term-ms = <250>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q               &kp W       &kp E     &kp R        &kp T                                     &kp Y            &kp U    &kp I      &kp O      &kp P
&mt LEFT_CONTROL A  &kp S       &kp D     &kp F        &kp G          &none      &VOL_UP_DOWN    &kp H            &lt 5 J  &kp K      &kp L      &kp ENTER
&kp Z               &kp X       &kp C     &kp V        &kp B          &mo 5      &KUDOKUTEN      &kp N            &kp M    &mkp LCLK  &mkp RCLK  &NUM1_SYMBOLLL2
&kp LEFT_SHIFT      &kp PERIOD  &kp LALT  &cmd_to_cmd  &kp BACKSPACE  &kp SPACE  &kp LEFT_ARROW  &kp RIGHT_ARROW                                 &play_pause_n_p
            >;

            sensor-bindings = <&encoder_msc_down_up>;
        };

        SYMBOLS {
            bindings = <
&kp EXCLAMATION  &kp LEFT_PARENTHESIS  &kp HASH     &kp RIGHT_PARENTHESIS  &kp DOLLAR                                       &none            &none  &none  &none  &none
&kp QUESTION     &kp LESS_THAN         &kp AT_SIGN  &kp GREATER_THAN       &kp BACKSLASH   &none            &none           &none            &none  &none  &none  &kp ENTER
&kp AMPERSAND    &kp LEFT_BRACKET      &JpBracket   &kp RIGHT_BRACKET      &kp LEFT_BRACE  &kp RIGHT_BRACE  &none           &none            &none  &none  &none  &none
&kp LSHFT        &kp PERIOD            &kp LALT     &cmd_to_cmd            &kp SEMI        &kp SQT          &kp LEFT_ARROW  &kp RIGHT_ARROW                       &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        NUM {
            bindings = <
&kp COMMA       &kp N7   &kp NUMBER_8  &kp N9       &kp PERCENT                               &none            &kp N7  &kp N8  &kp N9  &kp MINUS
&kp SLASH       &kp N4   &kp NUMBER_5  &kp N6       &kp MINUS      &none      &none           &none            &kp N4  &kp N5  &kp N6  &kp ENTER
&kp ASTERISK    &kp N1   &kp NUMBER_2  &kp N3       &kp PLUS       &kp EQUAL  &kp COMMA       &kp N0           &kp N1  &kp N2  &kp N3  &none
&kp LEFT_SHIFT  &kp DOT  &kp NUMBER_0  &cmd_to_cmd  &kp BACKSPACE  &kp SPACE  &kp LEFT_ARROW  &kp RIGHT_ARROW                          &kp DOT
            >;

            sensor-bindings = <&encoder_msc_down_up>;
        };

        MOUSEDETAIL {
            bindings = <
&ret_kp Q       &ret_kp W   &ret_kp E  &ret_kp R    &ret_kp T                                  &ret_kp Y      &ret_kp U  &ret_kp I  &ret_kp O      &ret_kp P
&ret_kp A       &ret_kp S   &ret_kp D  &ret_kp F    &ret_kp G     &none          &VOL_UP_DOWN  &ret_kp H      &mo 5      &ret_kp K  &ret_kp L      &ret_kp RET
&ret_kp Z       &ret_kp X   &ret_kp C  &ret_kp V    &ret_kp B     &mo 5          &KUDOKUTEN    &ret_kp N      &ret_kp M  &mkp LCLK  &ret_mkp RCLK  &kp RIGHT_SHIFT
&kp LEFT_SHIFT  &kp PERIOD  &kp LALT   &cmd_to_cmd  &ret_kp BSPC  &ret_kp SPACE  &ret_kp LEFT  &ret_kp RIGHT                                       &play_pause_n_p
            >;

            sensor-bindings = <&encoder_msc_down_up>;
        };

        MOUSE {
            bindings = <
&none               &none             &none             &none             &none                                               &ret_kp Y  &none      &none      &none      &none
&kp RCTRL           &none             &none             &none             &none           &none            &kp C_VOLUME_UP    &ret_kp H  &mo 5      &none      &none      &none
&none               &none             &none             &none             &none           &none            &kp C_VOLUME_DOWN  &ret_kp N  &ret_kp M  &mkp LCLK  &mkp RCLK  &kp RIGHT_SHIFT
&ret_kp LEFT_SHIFT  &ret_kp LEFT_ALT  &kp LEFT_COMMAND  &kp LEFT_COMMAND  &kp LEFT_ARROW  &kp RIGHT_ARROW  &none              &none                                       &none
            >;

            sensor-bindings = <&encoder_msc_down_up>;
        };

        SCROLL {
            bindings = <
&none      &kp HOME    &kp UP         &kp PAGE_UP    &none                                                       &none                 &none                  &kp LG(C)           &kp LG(V)            &none
&kp RCTRL  &kp LEFT    &kp LA(LS(F))  &kp RIGHT      &kp LG(C)           &none                &kp C_VOLUME_UP    &none                 &none                  &kp LESS_THAN       &kp GREATER_THAN     &none
&none      &kp END     &kp DOWN       &kp PAGE_DOWN  &kp LG(V)           &kp LG(X)            &kp C_VOLUME_DOWN  &kp LG(LEFT_BRACKET)  &kp LG(RIGHT_BRACKET)  &kp LC(LEFT_ARROW)  &kp LC(RIGHT_ARROW)  &kp LG(W)
&kp LSHFT  &kp PERIOD  &kp LALT       &cmd_to_cmd    &kp LG(LEFT_ARROW)  &kp LG(RIGHT_ARROW)  &kp LC(LS(TAB))    &kp LC(TAB)                                                                           &none
            >;

            sensor-bindings = <&inc_dec_kp LG(MINUS) LG(EQUAL)>;
        };
    };
};
